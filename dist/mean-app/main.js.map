{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/confirmation-dialog/confirmation-dialog.component.ts","./src/app/shared/confirmation-dialog/confirmation-dialog.component.html","./src/app/shared/material/material.module.ts","./src/app/shared/shared.module.ts","./src/app/users/components/user-dialog/user-dialog.component.ts","./src/app/users/components/user-dialog/user-dialog.component.html","./src/app/users/components/users-container/users-container.component.ts","./src/app/users/components/users-container/users-container.component.html","./src/app/users/components/users-grid/users-grid.component.ts","./src/app/users/components/users-grid/users-grid.component.html","./src/app/users/interceptors/api.interceptor.ts","./src/app/users/models/confirmation-dialog.model.ts","./src/app/users/models/index.ts","./src/app/users/models/user.model.ts","./src/app/users/services/users-store.service.ts","./src/app/users/services/users.service.ts","./src/app/users/users.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAmE;;;AAQ5D,MAAM,YAAY;;wEAAZ,YAAY;4FAAZ,YAAY;QCRzB,iFAA2C;;6FDQ9B,YAAY;cANxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;gBACnC,eAAe,EAAE,qEAAuB,CAAC,MAAM;aAChD;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEU;AACJ;AACgC;;AAcxE,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YALJ;YACP,uEAAa;YACb,+DAAW;YACX,4FAAuB;SACxB;mIAIU,SAAS,mBAVlB,2DAAY,aAGZ,uEAAa;QACb,+DAAW;QACX,4FAAuB;6FAKd,SAAS;cAZrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,+DAAW;oBACX,4FAAuB;iBACxB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACe;;;;;AAQlE,MAAM,2BAA2B;IAKtC,YACS,SAAoD,EAC3B,IAAwB;QADjD,cAAS,GAAT,SAAS,CAA2C;QAC3B,SAAI,GAAJ,IAAI,CAAoB;QAExD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IAC9B,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;;sGAnBU,2BAA2B,0MAO5B,wEAAe;2GAPd,2BAA2B;QCTxC,wEACE;QAAA,uDACF;QAAA,4DAAK;QAEL,yEACE;QAAA,oEAAG;QAAA,uDAAW;QAAA,4DAAI;QACpB,4DAAM;QAEN,yEACE;QAAA,4EAAuC;QAApB,mJAAS,aAAS,IAAC;QAAC,6DAAE;QAAA,4DAAS;QAClD,4EAA8D;QAApB,mJAAS,aAAS,IAAC;QAAC,8DAAG;QAAA,4DAAS;QAC5E,4DAAM;;QAVJ,0DACF;QADE,sFACF;QAGK,0DAAW;QAAX,4EAAW;;6FDIH,2BAA2B;cALvC,uDAAS;eAAC;gBACT,QAAQ,EAAE,yBAAyB;gBACnC,WAAW,EAAE,sCAAsC;gBACnD,SAAS,EAAE,CAAC,sCAAsC,CAAC;aACpD;;sBAQI,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEhB3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACU;AACE;AACF;AACF;AACI;AACA;;AAE3D,MAAM,OAAO,GAAG;IACd,sEAAc;IACd,wEAAe;IACf,sEAAc;IACd,oEAAa;IACb,wEAAe;IACf,wEAAe;CAChB,CAAC;AAYK,MAAM,cAAc;;6FAAd,cAAc;sJAAd,cAAc,kBARhB;YACP,4DAAY;YACZ,GAAG,OAAO;SACX,EAbD,sEAAc;QACd,wEAAe;QACf,sEAAc;QACd,oEAAa;QACb,wEAAe;QACf,wEAAe;mIAaJ,cAAc,cAPvB,4DAAY,EAXd,sEAAc;QACd,wEAAe;QACf,sEAAc;QACd,oEAAa;QACb,wEAAe;QACf,wEAAe,aALf,sEAAc;QACd,wEAAe;QACf,sEAAc;QACd,oEAAa;QACb,wEAAe;QACf,wEAAe;6FAaJ,cAAc;cAV1B,sDAAQ;eAAC;gBACR,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE;oBACP,4DAAY;oBACZ,GAAG,OAAO;iBACX;gBACD,OAAO,EAAE;oBACP,GAAG,OAAO;iBACX;aACF;;;;;;;;;;;;;;AC3BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACa;AACsC;;AAY3F,MAAM,YAAY;;2FAAZ,YAAY;kJAAZ,YAAY,kBARd;YACP,4DAAY;YACZ,wEAAc;SACf,EAEC,wEAAc;mIAGL,YAAY,mBATR,8GAA2B,aAExC,4DAAY;QACZ,wEAAc,aAGd,wEAAc;6FAGL,YAAY;cAVxB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,8GAA2B,CAAC;gBAC3C,OAAO,EAAE;oBACP,4DAAY;oBACZ,wEAAc;iBACf;gBACD,OAAO,EAAE;oBACP,wEAAc;iBACf;aACF;;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmF;AACV;AACe;;;;;;;;;;;ICwChF,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAFoD,0EAAc;IAC7E,0DACF;IADE,mFACF;;ADtCD,MAAM,UAAU;CAItB;AAQM,MAAM,mBAAmB;IAS9B,YACS,SAA4C,EACnB,IAAgB;QADzC,cAAS,GAAT,SAAS,CAAmC;QACnB,SAAI,GAAJ,IAAI,CAAY;QATlD,aAAQ,GAAG,IAAI,wDAAS,CAAC;YACvB,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9E,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7E,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACnE,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC/C,CAAC,CAAC;IAKC,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAEO,cAAc,CAAC,WAAmB;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,KAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;IACrF,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,wDAAS,CAAC;YAC5B,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE;gBAC3D,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;gBACvB,yDAAU,CAAC,OAAO,CAAC,aAAa,CAAC;aAClC,CAAC;YACF,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;gBACzD,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;gBACvB,yDAAU,CAAC,OAAO,CAAC,aAAa,CAAC;aAClC,CAAC;YACF,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE;gBACnD,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,KAAK;aACjB,CAAC;YACF,IAAI,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACxE,CAAC,CAAC;IACL,CAAC;IAED,YAAY,CAAC,WAAmB;QAC9B,OAAO;YACL,YAAY,EAAE,CAAC,OAAoB,EAAE,IAAwB,EAAW,EAAE;gBACxE,MAAM,cAAc,GAAG,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC;gBAC1D,MAAM,WAAW,GAAG,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;gBACvG,OAAO,cAAc,IAAI,WAAW,CAAC;YACvC,CAAC;SACF,CAAC;IACJ,CAAC;IAED,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,UAAU;QACR,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;YACvB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SAC3C;IACH,CAAC;IAED,eAAe,CAAC,WAAmB;QACjC,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;YAC7D,OAAO,+BAA+B,CAAC;SACxC;QACD,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;YAC5D,OAAO,mBAAmB,CAAC;SAC5B;QAED,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YACzD,OAAO,6BAA6B,CAAC;SACtC;QAED,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;YAC3D,OAAO,kCAAkC,CAAC;SAC3C;IACH,CAAC;IAED,SAAS,CAAC,KAAa,EAAE,IAAc;QACrC,OAAO,IAAI,CAAC;IACd,CAAC;;sFAjFU,mBAAmB,0MAWpB,wEAAe;mGAXd,mBAAmB;QClBhC,wEAAqB;QAAA,uDAAkC;;QAAA,4DAAK;QAC5D,0EACE;QAD2B,2IAAU,gBAAY,IAAC;QAClD,yEAEE;QAAA,oFACE;QAAA,4EAAW;QAAA,oEAAS;QAAA,4DAAY;QAChC,sEAOA;QAAA,4EAAW;QAAA,wDAAkC;QAAA,4DAAY;QAC3D,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,uEAOA;QAAA,6EAAW;QAAA,wDAAiC;QAAA,4DAAY;QAC1D,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,uEAOA;QAAA,6EAAW;QAAA,wDAA8B;QAAA,4DAAY;QACvD,4DAAiB;QAEjB,qFACE;QAAA,iFACE;QAAA,+HACE;QAEJ,4DAAa;QACb,6EAAW;QAAA,wDAA6B;QAAA,4DAAY;QACtD,4DAAiB;QACnB,4DAAM;QACN,2EACE;QAAA,8EAAiE;QAAA,gEAAI;QAAA,4DAAS;QAC9E,8EAAuD;QAApC,4IAAS,eAAW,IAAC;QAAe,qEAAS;QAAA,4DAAS;QAC3E,4DAAM;QACR,4DAAO;;QArDc,0DAAkC;QAAlC,gKAAkC;QACjD,0DAAsB;QAAtB,mFAAsB;QAUpB,0DAA+C;QAA/C,4GAA+C;QAEtC,0DAAkC;QAAlC,iGAAkC;QAU3C,0DAA8C;QAA9C,2GAA8C;QAErC,0DAAiC;QAAjC,gGAAiC;QAU1C,0DAA2C;QAA3C,wGAA2C;QAElC,0DAA8B;QAA9B,6FAA8B;QAK3B,0DAAoD;QAApD,mFAAoD;QAIvD,0DAA6B;QAA7B,4FAA6B;QAIvB,0DAA+B;QAA/B,4FAA+B;;6FDhCzC,mBAAmB;cAN/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;gBAC3C,eAAe,EAAE,qEAAuB,CAAC,MAAM;aAChD;uHAYyC,UAAU;sBAA/C,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AE7B3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsF;AAEvB;AACG;AACa;AACvB;AAEmB;AACoC;;;;;;;;;;;;;;;ICMvG,6EAQE;IAFA,uVAAwB;IAExB,2EAAU;IAAA,gEAAK;IAAA,4DAAW;IAC5B,4DAAS;;;IAKP,6EAA4C;IAAA,8DAAG;IAAA,4DAAa;;;IAC5D,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAFyC,2EAAc;IAClE,0DACF;IADE,oFACF;;;;IA9BR,wEACE;IAAA,4EACE;IADwC,4UAAmB;IAC3D,qEACF;IAAA,4DAAS;IACT,0EACE;IAAA,oFACE;IAAA,4EAAW;IAAA,yEAAc;IAAA,4DAAY;IACrC,sEAMA;IAAA,8IAQE;IAEJ,4DAAiB;IAEjB,oFACE;IAAA,kFACE;IAAA,yJAA4C;IAC5C,yJACE;IAEJ,4DAAa;IACf,4DAAiB;IACnB,4DAAO;IAEP,sFAIkB;IAFhB,kXAAkC;IAEnC,4DAAiB;IACpB,qEAAe;;;;IApCP,0DAAwB;IAAxB,wFAAwB;IAWxB,0DAAkC;IAAlC,mGAAkC;IAYtB,0DAA+B;IAA/B,gGAA+B;IAC/B,0DAAyC;IAAzC,iFAAyC;IAQzD,0DAAoB;IAApB,gFAAoB;;;IAKF,qEAAU;;;IA1ClC,yEACE;IAAA,4IACE;;IAwCF,qNAAsB;IACxB,4DAAM;;;;IA1CU,0DAA2C;IAA3C,qJAA2C;;ADepD,MAAM,uBAAuB;IAalC,YACU,SAA4B,EAC7B,MAAiB;QADhB,cAAS,GAAT,SAAS,CAAmB;QAC7B,WAAM,GAAN,MAAM,CAAW;QAbjB,eAAU,GAAG,IAAI,wDAAS,CAAC;YAClC,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC5B,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAC1B,CAAC,CAAC;QACM,UAAK,GAAe,mFAA0D,CAAC;QAC/E,eAAU,GAAwB,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;QAI7D,eAAU,GAAkB,IAAI,4CAAO,EAAE,CAAC;IAK9C,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,IAAI,CAC7B,2DAAI,CAAC,CAAC,CAAC,EACP,gEAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAC3B,CAAC,SAAS,EAAE,CAAC;QAEd,IAAI,CAAC,MAAM,GAAG,0DAAa,CAAC;YAC1B,IAAI,CAAC,SAAS,CAAC,MAAM;YACrB,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CAC/B,gEAAS,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CACjC;SACF,CAAC,CAAC,IAAI,CACL,0DAAG,CAAC,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE;YACvB,MAAM,aAAa,GAAG,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,GAAkB,EAAE,EAAE,CAAC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,GAAG,CAAC,CAAC;YAC5G,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,IAAU,EAAW,EAAE,CAC1C,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;iBACpD,IAAI,CAAC,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,CAAC,iBAAiB,EAAE;iBAC7C,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CACpH,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,YAAY;QACV,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;YACzB,OAAO,EAAE,EAAE;SACZ,CAAC,CAAC;IACL,CAAC;IAED,OAAO;QACL,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sFAAmB,EAAE;YACtD,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG;SAC5C,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,IAAI,CAC1B,6DAAM,CAAC,OAAO,CAAC,EACf,gEAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAC3B,CAAC,SAAS,CAAC,CAAC,OAAa,EAAE,EAAE;YAC5B,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAClC,6DAAM,CAAC,OAAO,CAAC,EACf,gEAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAC3B,CAAC,SAAS,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,IAAU;QACjB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sFAAmB,EAAE;YACtD,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG;SAC7D,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,IAAI,CAC1B,6DAAM,CAAC,OAAO,CAAC,EACf,gEAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAC3B,CAAC,SAAS,CAAC,CAAC,UAAgB,EAAE,EAAE;YAC/B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC,IAAI,CAChD,gEAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAC3B,CAAC,SAAS,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,MAAc;QACvB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4HAA2B,EAAE;YAC9D,QAAQ,EAAE,OAAO;YACjB,IAAI,EAAE,IAAI,0DAAkB,CAAC,gBAAgB,EAAE,mCAAmC,CAAC;SACpF,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,IAAI,CAC1B,gEAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAC3B,CAAC,SAAS,CAAC,CAAC,WAAoB,EAAE,EAAE;YACnC,IAAI,CAAC,CAAC,WAAW,EAAE;gBACjB,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC;aAC/C;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC7B,CAAC;;8FAtGU,uBAAuB;uGAAvB,uBAAuB;QChBpC,mHACE;;;QADiB,6IAA+B;;6FDgBrC,uBAAuB;cANnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;gBAC/C,eAAe,EAAE,qEAAuB,CAAC,MAAM;aAChD;;;;;;;;;;;;;;AEfD;AAAA;AAAA;AAAA;AAAA;AAAwG;;;;;ICEpG,kFAAoC;IAAA,sEAAU;IAAA,4DAAkB;;;IAChE,2EAAkC;IAAA,uDAAqB;IAAA,4DAAW;;;IAAhC,0DAAqB;IAArB,8FAAqB;;;IAIvD,kFAAoC;IAAA,qEAAS;IAAA,4DAAkB;;;IAC/D,2EAAkC;IAAA,uDAAoB;IAAA,4DAAW;;;IAA/B,0DAAoB;IAApB,6FAAoB;;;IAItD,kFAAoC;IAAA,kEAAM;IAAA,4DAAkB;;;IAC5D,2EAAkC;IAAA,uDAAiB;IAAA,4DAAW;;;IAA5B,0DAAiB;IAAjB,0FAAiB;;;IAInD,kFAAoC;IAAA,iEAAK;IAAA,4DAAkB;;;IAC3D,2EAAkC;IAAA,uDAAgB;IAAA,4DAAW;;;IAA3B,0DAAgB;IAAhB,yFAAgB;;;IAIlD,kFAAoC;IAAA,oEAAQ;IAAA,4DAAkB;;;;IAC9D,2EACE;IAAA,6EAA4C;IAAzB,sWAAwB;IAAC,+DAAI;IAAA,4DAAS;IACzD,6EAAkD;IAA/B,4WAA8B;IAAC,iEAAM;IAAA,4DAAS;IACnE,4DAAW;;;IAGb,4EAAqE;;;IACrE,qEAAmE;;ADrB9D,MAAM,kBAAkB;IAO7B;QALA,qBAAgB,GAAa,CAAC,WAAW,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;QAEzE,kBAAa,GAAuB,IAAI,0DAAY,EAAE,CAAC;QACvD,oBAAe,GAAyB,IAAI,0DAAY,EAAE,CAAC;IAErD,CAAC;IAEjB,QAAQ,KAAU,CAAC;IAEnB,QAAQ,CAAC,IAAU;QACjB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAED,UAAU,CAAC,MAAc;QACvB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;;oFAjBU,kBAAkB;kGAAlB,kBAAkB;QCT/B,+EACE;QAAA,2EACE;QAAA,sIAAoC;QACpC,wHAAkC;QACpC,qEAAe;QAEf,2EACE;QAAA,sIAAoC;QACpC,wHAAkC;QACpC,qEAAe;QAEf,2EACE;QAAA,sIAAoC;QACpC,wHAAkC;QACpC,qEAAe;QAEf,4EACE;QAAA,wIAAoC;QACpC,0HAAkC;QACpC,qEAAe;QAEf,4EACE;QAAA,wIAAoC;QACpC,0HACE;QAGJ,qEAAe;QAEf,sIAAoD;QACpD,wHAAyD;QAC3D,4DAAY;;QA/BD,sFAAyB;QA6BlB,2DAAmC;QAAnC,iGAAmC;QAC1C,0DAA+C;QAA/C,kGAA+C;;6FDrB7C,kBAAkB;cAN9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;gBAC1C,eAAe,EAAE,qEAAuB,CAAC,MAAM;aAChD;;kBAIE,mDAAK;;kBACL,oDAAM;;kBACN,oDAAM;;;;;;;;;;;;;;AEdT;AAAA;AAAA;AAAA;AAA2C;AAQqB;;AAEhE,MAAM,MAAM,GAAG,qEAAW,CAAC,MAAM,IAAI,EAAE,CAAC;AAGjC,MAAM,cAAc;IACzB,gBAAgB,CAAC;IAEjB,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,MAAM,GAAG,GAAG,MAAM,GAAG,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;QACvC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;QAEjC,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;;4EARU,cAAc;iGAAd,cAAc,WAAd,cAAc;6FAAd,cAAc;cAD1B,wDAAU;;;;;;;;;;;;;;ACZX;AAAA;AAAO,MAAM,kBAAkB;IAC7B,YACS,KAAa,EACb,OAAe;QADf,UAAK,GAAL,KAAK,CAAQ;QACb,YAAO,GAAP,OAAO,CAAQ;IACrB,CAAC;CACL;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6B;AACe;;;;;;;;;;;;;ACK5C;AAAA;AAAO,MAAM,IAAI;CAMhB;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACqB;AACR;;;AAQjD,MAAM,iBAAiB;IAK5B,YACU,WAAyB;QAAzB,gBAAW,GAAX,WAAW,CAAc;QAL3B,cAAS,GAA4B,IAAI,oDAAe,CAAC,EAAE,CAAC,CAAC;QAC5D,WAAM,GAAuB,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;QACpE,eAAU,GAA6B,IAAI,oDAAe,CAAC,KAAK,CAAC,CAAC;IAI9D,CAAC;IAEL,SAAS;QACP,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,MAAM,EAAE;YACrC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC3B,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,IAAI,CACnC,0DAAG,CAAC,CAAC,KAAa,EAAE,EAAE;gBACpB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC3B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9B,CAAC,CAAC,EACF,iEAAU,CAAC,CAAC,KAAU,EAAE,EAAE;gBACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC5B,OAAO,+CAAE,CAAC,KAAK,CAAC,CAAC;YACnB,CAAC,CAAC,CACH,CAAC;SACH;QACD,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,OAAO,CAAC,IAAU;QAChB,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CACvC,0DAAG,CAAC,CAAC,OAAa,EAAE,EAAE;YACpB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBAClB,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE;gBAC5B,OAAO;aACR,CAAC,CAAC;QACL,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,QAAQ,CAAC,MAAc,EAAE,IAAU;QACjC,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,IAAI,CAC/C,0DAAG,CAAC,CAAC,WAAiB,EAAE,EAAE;YACxB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,IAAU,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,KAAK,MAAM,CAAC,CAAC;YAC3F,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBAClB,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC;gBAChD,WAAW;gBACX,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC;aAClD,CAAC,CAAC;QACL,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,MAAc;QACvB,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CACzC,0DAAG,CAAC,CAAC,WAAiB,EAAE,EAAE;YACxB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBAClB,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,EAAQ,EAAE,EAAE,CAAC,GAAG,KAAK,MAAM,CAAC;aACvE,CAAC,CAAC;QACL,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;kFA1DU,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;6FAEP,iBAAiB;cAH7B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAA2C;;;AASpC,MAAM,YAAY;IAEvB,YACU,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;IACvB,CAAC;IAEL,MAAM;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAS,OAAO,CAAC,CAAC;IACzC,CAAC;IAED,MAAM,CAAC,IAAU;QACf,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAO,OAAO,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,MAAM,CAAC,MAAc,EAAE,IAAmB;QACxC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAO,SAAS,MAAM,EAAE,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC;IAED,MAAM,CAAC,MAAc;QACnB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAO,SAAS,MAAM,EAAE,CAAC,CAAC;IACpD,CAAC;;wEApBU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAC4B;AAEX;AACiC;AACf;AAC3B;AACF;AACgC;;AAErF,MAAM,UAAU,GAAG;IACjB,6GAAuB;IACvB,8FAAkB;CACnB,CAAC;AAoBK,MAAM,WAAW;;0FAAX,WAAW;gJAAX,WAAW,mBAJX;QACT,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,4EAAc,EAAE,KAAK,EAAE,IAAI,EAAE;KACtE,YAXQ;YACP,4DAAY;YACZ,qEAAgB;YAChB,kEAAY;YACZ,kEAAmB;SACpB;mIAQU,WAAW,mBAtBtB,6GAAuB;QACvB,8FAAkB,EAMhB,iGAAmB,aAGnB,4DAAY;QACZ,qEAAgB;QAChB,kEAAY;QACZ,kEAAmB,aAbrB,6GAAuB;QACvB,8FAAkB;6FAqBP,WAAW;cAlBvB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,GAAG,UAAU;oBACb,iGAAmB;iBACpB;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,qEAAgB;oBAChB,kEAAY;oBACZ,kEAAmB;iBACpB;gBACD,OAAO,EAAE;oBACP,GAAG,UAAU;iBACd;gBACD,SAAS,EAAE;oBACT,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,4EAAc,EAAE,KAAK,EAAE,IAAI,EAAE;iBACtE;aACF;;;;;;;;;;;;;;ACjCD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAE,KAAK;CACd,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AChBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent {}\n","<app-users-container></app-users-container>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { UsersModule } from './users/users.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    UsersModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ConfirmDialogModel } from 'src/app/users/models';\n\n@Component({\n  selector: 'app-confirmation-dialog',\n  templateUrl: './confirmation-dialog.component.html',\n  styleUrls: ['./confirmation-dialog.component.scss']\n})\nexport class ConfirmationDialogComponent {\n\n  title: string;\n  message: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmationDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ConfirmDialogModel,\n  ) {\n    this.title = data.title;\n    this.message = data.message;\n  }\n\n  confirm(): void {\n    this.dialogRef.close(true);\n  }\n\n  dismiss(): void {\n    this.dialogRef.close(false);\n  }\n\n}\n","<h1 mat-dialog-title>\n  {{title}}\n</h1>\n\n<div mat-dialog-content>\n  <p>{{message}}</p>\n</div>\n\n<div mat-dialog-actions>\n  <button mat-button (click)=\"dismiss()\">No</button>\n  <button mat-raised-button color=\"primary\" (click)=\"confirm()\">Yes</button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nconst MODULES = [\n  MatTableModule,\n  MatSelectModule,\n  MatInputModule,\n  MatIconModule,\n  MatButtonModule,\n  MatDialogModule,\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    ...MODULES,\n  ],\n  exports: [\n    ...MODULES,\n  ],\n})\nexport class MaterialModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from './material/material.module';\nimport { ConfirmationDialogComponent } from './confirmation-dialog/confirmation-dialog.component';\n\n@NgModule({\n  declarations: [ConfirmationDialogComponent],\n  imports: [\n    CommonModule,\n    MaterialModule,\n  ],\n  exports: [\n    MaterialModule,\n  ]\n})\nexport class SharedModule { }\n","import { Component, Inject, ChangeDetectionStrategy, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup, FormControl, Validators, FormGroupDirective } from '@angular/forms';\nimport { UserRole, User } from '../../models';\n\ntype Action = 'add' | 'edit';\nexport class DialogData {\n  action: Action;\n  userData: User;\n  roles: UserRole[];\n}\n\n@Component({\n  selector: 'app-user-dialog',\n  templateUrl: './user-dialog.component.html',\n  styleUrls: ['./user-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserDialogComponent implements OnInit {\n\n  userForm = new FormGroup({\n    firstName: new FormControl('', [Validators.required, Validators.minLength(2)]),\n    lastName: new FormControl('', [Validators.required, Validators.minLength(2)]),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    role: new FormControl('', Validators.required),\n  });\n\n  constructor(\n    public dialogRef: MatDialogRef<UserDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n  ) { }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  private initFieldValue(controlName: string): any {\n    return this.data.action === 'add' as Action ? '' : this.data.userData[controlName];\n  }\n\n  initForm(): void {\n    this.userForm = new FormGroup({\n      firstName: new FormControl(this.initFieldValue('firstName'), [\n        Validators.required,\n        Validators.minLength(2),\n        Validators.pattern('^[A-Za-z]+$'),\n      ]),\n      lastName: new FormControl(this.initFieldValue('lastName'), [\n        Validators.required,\n        Validators.minLength(2),\n        Validators.pattern('^[A-Za-z]+$'),\n      ]),\n      email: new FormControl(this.initFieldValue('email'), [\n        Validators.required,\n        Validators.email,\n      ]),\n      role: new FormControl(this.initFieldValue('role'), Validators.required),\n    });\n  }\n\n  errorMatcher(controlName: string): any {\n    return {\n      isErrorState: (control: FormControl, form: FormGroupDirective): boolean => {\n        const controlInvalid = control.touched && control.invalid;\n        const formInvalid = control.touched && this.userForm.get(controlName).touched && this.userForm.invalid;\n        return controlInvalid || formInvalid;\n      }\n    };\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  submitForm(): void {\n    if (this.userForm.valid) {\n      this.dialogRef.close(this.userForm.value);\n    }\n  }\n\n  getErrorMessage(controlName: string): string {\n    if (this.userForm.controls[controlName].hasError('minlength')) {\n      return 'Must be at least 2 characters';\n    }\n    if (this.userForm.controls[controlName].hasError('required')) {\n      return 'Field is required';\n    }\n\n    if (this.userForm.controls[controlName].hasError('email')) {\n      return 'Must be valid email address';\n    }\n\n    if (this.userForm.controls[controlName].hasError('pattern')) {\n      return 'Must not contain numeric symbols';\n    }\n  }\n\n  trackByFn(index: number, role: UserRole): UserRole {\n    return role;\n  }\n}\n","<h1 mat-dialog-title>{{ data.action | titlecase }} User</h1>\n<form [formGroup]=\"userForm\" (submit)=\"submitForm()\" class=\"user-form\">\n  <div mat-dialog-content class=\"user-form__content\">\n\n    <mat-form-field class=\"example-form-field\">\n      <mat-label>FirstName</mat-label>\n      <input\n        matInput\n        type=\"text\"\n        formControlName=\"firstName\"\n        autocomplete=\"off\"\n        [errorStateMatcher]=\"errorMatcher('firstName')\"\n      />\n      <mat-error>{{ getErrorMessage(\"firstName\") }}</mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"example-form-field\">\n      <mat-label>LastName</mat-label>\n      <input\n        matInput\n        type=\"text\"\n        formControlName=\"lastName\"\n        autocomplete=\"off\"\n        [errorStateMatcher]=\"errorMatcher('lastName')\"\n      />\n      <mat-error>{{ getErrorMessage(\"lastName\") }}</mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"example-form-field\">\n      <mat-label>Email</mat-label>\n      <input\n        matInput\n        type=\"text\"\n        formControlName=\"email\"\n        autocomplete=\"off\"\n        [errorStateMatcher]=\"errorMatcher('email')\"\n      />\n      <mat-error>{{ getErrorMessage(\"email\") }}</mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"full-width\">\n      <mat-select formControlName=\"role\" placeholder=\"Role\">\n        <mat-option *ngFor=\"let role of data.roles; trackBy: trackByFn;\" [value]=\"role\">\n          {{ role }}\n        </mat-option>\n      </mat-select>\n      <mat-error>{{ getErrorMessage(\"role\") }}</mat-error>\n    </mat-form-field>\n  </div>\n  <div mat-dialog-actions class=\"user-form__actions\">\n    <button mat-button [disabled]=\"!!userForm.invalid\" type=\"submit\">Save</button>\n    <button mat-button (click)=\"onNoClick()\" type=\"button\">No Thanks</button>\n  </div>\n</form>\n","import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\nimport { UsersStoreService } from '../../services/users-store.service';\nimport { Observable, Subject, combineLatest, of, } from 'rxjs';\nimport { User, UserRole, ConfirmDialogModel } from '../../models';\nimport { take, takeUntil, tap, map, startWith, filter, } from 'rxjs/operators';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { MatDialog, } from '@angular/material/dialog';\nimport { UserDialogComponent } from '../user-dialog/user-dialog.component';\nimport { ConfirmationDialogComponent } from 'src/app/shared/confirmation-dialog/confirmation-dialog.component';\n\n@Component({\n  selector: 'app-users-container',\n  templateUrl: './users-container.component.html',\n  styleUrls: ['./users-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UsersContainerComponent implements OnInit, OnDestroy {\n\n  readonly filterForm = new FormGroup({\n    keyword: new FormControl(''),\n    role: new FormControl(''),\n  });\n  readonly roles: UserRole[] = [UserRole.ARTIST, UserRole.ART_MANAGER, UserRole.DESIGNER];\n  readonly isLoading$: Observable<boolean> = this.userStore.isLoading$;\n\n  users$: Observable<User[]>;\n\n  private onDestroy$: Subject<void> = new Subject();\n\n  constructor(\n    private userStore: UsersStoreService,\n    public dialog: MatDialog,\n  ) { }\n\n  ngOnInit(): void {\n    this.loadUsers();\n  }\n\n  loadUsers(): void {\n    this.userStore.loadUsers().pipe(\n      take(1),\n      takeUntil(this.onDestroy$),\n    ).subscribe();\n\n    this.users$ = combineLatest([\n      this.userStore.users$,\n      this.filterForm.valueChanges.pipe(\n        startWith(this.filterForm.value),\n      ),\n    ]).pipe(\n      map(([users, filters]) => {\n        const keywordFilter = ({ firstName, lastName, email, }: Partial<User>) => ({ firstName, lastName, email, });\n        return users.filter((user: User): boolean =>\n          (!!filters.keyword ? Object.values(keywordFilter(user))\n            .some((item: string) => item.toLocaleLowerCase()\n              .includes(filters.keyword.toLocaleLowerCase())) : true) && (!!filters.role ? user.role === filters.role : true)\n        );\n      }),\n    );\n  }\n\n  clearKeyword(): void {\n    this.filterForm.patchValue({\n      keyword: '',\n    });\n  }\n\n  addUser(): void {\n    const dialogRef = this.dialog.open(UserDialogComponent, {\n      width: '20rem',\n      data: { action: 'add', roles: this.roles, }\n    });\n\n    dialogRef.afterClosed().pipe(\n      filter(Boolean),\n      takeUntil(this.onDestroy$),\n    ).subscribe((newUser: User) => {\n      this.userStore.addUser(newUser).pipe(\n        filter(Boolean),\n        takeUntil(this.onDestroy$),\n      ).subscribe();\n    });\n  }\n\n  editUser(user: User): void {\n    const dialogRef = this.dialog.open(UserDialogComponent, {\n      width: '20rem',\n      data: { action: 'edit', userData: user, roles: this.roles, }\n    });\n\n    dialogRef.afterClosed().pipe(\n      filter(Boolean),\n      takeUntil(this.onDestroy$),\n    ).subscribe((editedUser: User) => {\n      this.userStore.editUser(user._id, editedUser).pipe(\n        takeUntil(this.onDestroy$),\n      ).subscribe();\n    });\n  }\n\n  removeUser(userId: string): void {\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\n      maxWidth: '20rem',\n      data: new ConfirmDialogModel('Confirm Action', 'Are you sure you want to do this?'),\n    });\n\n    dialogRef.afterClosed().pipe(\n      takeUntil(this.onDestroy$),\n    ).subscribe((isConfirmed: boolean) => {\n      if (!!isConfirmed) {\n        this.userStore.removeUser(userId).subscribe();\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.onDestroy$.next();\n    this.onDestroy$.complete();\n  }\n\n}\n","<div class=\"users\" *ngIf=\"users$ | async as users\">\n  <ng-container *ngIf=\"!(isLoading$ | async); else loading\">\n    <button mat-raised-button color=\"primary\" (click)=\"addUser()\">\n      Add user\n    </button>\n    <form [formGroup]=\"filterForm\">\n      <mat-form-field class=\"example-form-field\">\n        <mat-label>Search keyword</mat-label>\n        <input\n          matInput\n          type=\"text\"\n          formControlName=\"keyword\"\n          autocomplete=\"off\"\n        />\n        <button\n          mat-button\n          *ngIf=\"!!filterForm.value.keyword\"\n          matSuffix\n          mat-icon-button\n          aria-label=\"Clear\"\n          (click)=\"clearKeyword()\"\n        >\n          <mat-icon>close</mat-icon>\n        </button>\n      </mat-form-field>\n\n      <mat-form-field class=\"full-width\">\n        <mat-select formControlName=\"role\" placeholder=\"Role\">\n          <mat-option *ngIf=\"!!filterForm.value.role\">All</mat-option>\n          <mat-option *ngFor=\"let role of roles; trackBy: role\" [value]=\"role\">\n            {{ role }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </form>\n\n    <app-users-grid\n      [dataSource]=\"users\"\n      (editUserEvent)=\"editUser($event)\"\n      (removeUserEvent)=\"removeUser($event)\"\n    ></app-users-grid>\n  </ng-container>\n  <ng-template #loading>Loading...</ng-template>\n</div>\n","import { Component, OnInit, Input, ChangeDetectionStrategy, Output, EventEmitter } from '@angular/core';\nimport { User } from '../../models';\n\n@Component({\n  selector: 'app-users-grid',\n  templateUrl: './users-grid.component.html',\n  styleUrls: ['./users-grid.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UsersGridComponent implements OnInit {\n\n  displayedColumns: string[] = ['firstname', 'lastname', 'email', 'role', 'actions'];\n  @Input() dataSource: User[];\n  @Output() editUserEvent: EventEmitter<User> = new EventEmitter();\n  @Output() removeUserEvent: EventEmitter<string> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {}\n\n  editUser(user: User): void {\n    this.editUserEvent.emit(user);\n  }\n\n  removeUser(userId: string): void {\n    this.removeUserEvent.emit(userId);\n  }\n\n}\n","<mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n  <ng-container matColumnDef=\"firstname\">\n    <mat-header-cell *matHeaderCellDef> Firstname </mat-header-cell>\n    <mat-cell *matCellDef=\"let user\"> {{ user.firstName }} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"lastname\">\n    <mat-header-cell *matHeaderCellDef> Lastname </mat-header-cell>\n    <mat-cell *matCellDef=\"let user\"> {{ user.lastName }} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"email\">\n    <mat-header-cell *matHeaderCellDef> Email </mat-header-cell>\n    <mat-cell *matCellDef=\"let user\"> {{ user.email }} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"role\">\n    <mat-header-cell *matHeaderCellDef> Role </mat-header-cell>\n    <mat-cell *matCellDef=\"let user\"> {{ user.role }} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"actions\">\n    <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\n    <mat-cell *matCellDef=\"let user\">\n      <button mat-button (click)=\"editUser(user)\">Edit</button>\n      <button mat-button (click)=\"removeUser(user._id)\">Delete</button>\n    </mat-cell>\n  </ng-container>\n\n  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n  <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\n</mat-table>\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../environments/environment';\n\nconst apiUrl = environment.apiUrl || '';\n\n@Injectable()\nexport class ApiInterceptor implements HttpInterceptor {\n  constructor() { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const url = apiUrl + '/' + request.url;\n    request = request.clone({ url });\n\n    return next.handle(request);\n  }\n}\n","export class ConfirmDialogModel {\n  constructor(\n    public title: string,\n    public message: string,\n  ) {}\n}\n","export * from './user.model';\nexport * from './confirmation-dialog.model';\n","export const enum UserRole {\n  ARTIST = 'ARTIST',\n  DESIGNER = 'DESIGNER',\n  ART_MANAGER = 'ART_MANAGER',\n}\n\nexport class User {\n  _id?: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  role: UserRole;\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, of } from 'rxjs';\nimport { tap, take, catchError, } from 'rxjs/operators';\n\nimport { User } from '../models';\nimport { UsersService } from './users.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersStoreService {\n  private userList$: BehaviorSubject<User[]> = new BehaviorSubject([]);\n  readonly users$: Observable<User[]> = this.userList$.asObservable();\n  isLoading$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(\n    private userService: UsersService,\n  ) { }\n\n  loadUsers(): Observable<User[]> {\n    if (!this.userList$.getValue().length) {\n      this.isLoading$.next(true);\n      return this.userService.getAll().pipe(\n        tap((users: User[]) => {\n          this.userList$.next(users);\n          this.isLoading$.next(false);\n        }),\n        catchError((error: any) => {\n          this.isLoading$.next(false);\n          return of(error);\n        })\n      );\n    }\n    return this.users$;\n  }\n\n  addUser(user: User): Observable<User> {\n    return this.userService.create(user).pipe(\n      tap((newUser: User) => {\n        this.userList$.next([\n          ...this.userList$.getValue(),\n          newUser,\n        ]);\n      })\n    );\n  }\n\n  editUser(userId: string, user: User): Observable<User> {\n    return this.userService.update(userId, user).pipe(\n      tap((updatedUser: User) => {\n        const itemIndex = this.userList$.getValue().findIndex((item: User) => item._id === userId);\n        this.userList$.next([\n          ...this.userList$.getValue().slice(0, itemIndex),\n          updatedUser,\n          ...this.userList$.getValue().slice(itemIndex + 1)\n        ]);\n      })\n    );\n  }\n\n  removeUser(userId: string): Observable<User> {\n    return this.userService.remove(userId).pipe(\n      tap((removedUser: User) => {\n        this.userList$.next([\n          ...this.userList$.getValue().filter(({ _id }: User) => _id !== userId)\n        ]);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { User } from '../models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  constructor(\n    private http$: HttpClient,\n  ) { }\n\n  getAll(): Observable<User[]> {\n    return this.http$.get<User[]>('users');\n  }\n\n  create(user: User): Observable<User> {\n    return this.http$.post<User>('users', user);\n  }\n\n  update(userId: string, user: Partial<User>): Observable<User> {\n    return this.http$.put<User>(`users/${userId}`, user);\n  }\n\n  remove(userId: string): Observable<User> {\n    return this.http$.delete<User>(`users/${userId}`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { ApiInterceptor } from './interceptors/api.interceptor';\nimport { UsersContainerComponent } from './components/users-container/users-container.component';\nimport { UsersGridComponent } from './components/users-grid/users-grid.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { UserDialogComponent } from './components/user-dialog/user-dialog.component';\n\nconst COMPONENTS = [\n  UsersContainerComponent,\n  UsersGridComponent,\n];\n\n@NgModule({\n  declarations: [\n    ...COMPONENTS,\n    UserDialogComponent,\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    SharedModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    ...COMPONENTS,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: ApiInterceptor, multi: true },\n  ]\n})\nexport class UsersModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'api',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}